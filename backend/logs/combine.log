2025-08-13 22:33:43 [ERROR]: POST /auth/register 
Invalid `prisma.users.findUnique()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\user\user.repository.ts:10:23

   7 import { generatedOtp } from "../../utils/generateOtp";
   8 
   9 export const findUserByEmail = async (email: string) => {
→ 10   return prisma.users.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-13 22:35:10 [ERROR]: PATCH /auth/verify-email 
Invalid `prisma.users.findUnique()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\user\user.repository.ts:10:23

   7 import { generatedOtp } from "../../utils/generateOtp";
   8 
   9 export const findUserByEmail = async (email: string) => {
→ 10   return prisma.users.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-13 22:35:32 [ERROR]: PATCH /auth/new-otp 
Invalid `prisma.users.findUnique()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\user\user.repository.ts:10:23

   7 import { generatedOtp } from "../../utils/generateOtp";
   8 
   9 export const findUserByEmail = async (email: string) => {
→ 10   return prisma.users.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-13 22:36:34 [ERROR]: PATCH /auth/new-otp 
Invalid `prisma.users.findUnique()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\user\user.repository.ts:10:23

   7 import { generatedOtp } from "../../utils/generateOtp";
   8 
   9 export const findUserByEmail = async (email: string) => {
→ 10   return prisma.users.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-13 22:37:53 [ERROR]: PATCH /auth/new-otp 
Invalid `prisma.users.findUnique()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\user\user.repository.ts:10:23

   7 import { generatedOtp } from "../../utils/generateOtp";
   8 
   9 export const findUserByEmail = async (email: string) => {
→ 10   return prisma.users.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-13 22:38:41 [ERROR]: PATCH /auth/new-otp 
Invalid `prisma.users.findUnique()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\user\user.repository.ts:9:23

  6 } from "../../types/user/users.types";
  7 
  8 export const findUserByEmail = async (email: string) => {
→ 9   return prisma.users.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-13 22:39:34 [ERROR]: PATCH /auth/new-otp 
Invalid `prisma.users.findUnique()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\user\user.repository.ts:9:23

  6 } from "../../types/user/users.types";
  7 
  8 export const findUserByEmail = async (email: string) => {
→ 9   return prisma.users.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-13 22:41:12 [ERROR]: PATCH /auth/new-otp 
Invalid `prisma.users.findUnique()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\user\user.repository.ts:9:23

  6 } from "../../types/user/users.types";
  7 
  8 export const findUserByEmail = async (email: string) => {
→ 9   return prisma.users.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-14 14:27:37 [ERROR]: PATCH /auth/new-otp 
Invalid `prisma.users.findUnique()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\user\user.repository.ts:9:23

  6 } from "../../types/user/users.types";
  7 
  8 export const findUserByEmail = async (email: string) => {
→ 9   return prisma.users.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-14 14:35:35 [ERROR]: POST /auth/register User already exist {"statusCode":400,"success":false,"message":"User already exist"}
2025-08-14 14:35:48 [ERROR]: PATCH /auth/verify-email Invalid verification code {"statusCode":400,"success":false,"message":"Invalid verification code"}
2025-08-14 18:23:33 [ERROR]: GET /user Invalid token {"statusCode":401,"success":false,"message":"Invalid token"}
2025-08-14 19:05:40 [ERROR]: PATCH /user/reset-password 
Invalid `prisma.users.update()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\user\user.respository.ts:13:23

  10   userId: string,
  11   newPassword: string
  12 ) => {
→ 13   return prisma.users.update(
An operation failed because it depends on one or more records that were required but not found. No record was found for an update. {"code":"P2025","meta":{"modelName":"users","cause":"No record was found for an update."},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-14 19:06:25 [ERROR]: PATCH /user/reset-password 
Invalid `prisma.users.update()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\user\user.respository.ts:13:23

  10   userId: string,
  11   newPassword: string
  12 ) => {
→ 13   return prisma.users.update(
An operation failed because it depends on one or more records that were required but not found. No record was found for an update. {"code":"P2025","meta":{"modelName":"users","cause":"No record was found for an update."},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-14 19:14:16 [ERROR]: PATCH /user/reset-password Invalid password {"statusCode":401,"success":false,"message":"Invalid password"}
2025-08-14 20:46:58 [ERROR]: POST /user/otp-password 
Invalid `prisma.users.update()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\auth\auth.repository.ts:21:23

  18 };
  19 
  20 export const createNewOtp = async (data: CreateNewOtp) => {
→ 21   return prisma.users.update({
         where: {
           email: undefined,
       ?   id?: String,
       ?   AND?: usersWhereInput | usersWhereInput[],
       ?   OR?: usersWhereInput[],
       ?   NOT?: usersWhereInput | usersWhereInput[],
       ?   role?: EnumRoleFilter | Role,
       ?   full_name?: StringFilter | String,
       ?   password_hash?: StringFilter | String,
       ?   profile_picture?: StringNullableFilter | String | Null,
       ?   is_verified?: BoolFilter | Boolean,
       ?   created_at?: DateTimeFilter | DateTime,
       ?   updated_at?: DateTimeFilter | DateTime,
       ?   reset_password_otp?: StringNullableFilter | String | Null,
       ?   verify_otp?: StringNullableFilter | String | Null,
       ?   verify_otp_expires_at?: DateTimeNullableFilter | DateTime | Null,
       ?   bookings?: BookingsListRelationFilter,
       ?   reviews?: ReviewsListRelationFilter,
       ?   tenants?: TenantsListRelationFilter
         },
         data: {
           email: undefined,
           reset_password_otp: "119662"
         }
       })

Argument `where` of type usersWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?. {"name":"PrismaClientValidationError","clientVersion":"6.13.0"}
2025-08-14 21:01:42 [ERROR]: POST /user/otp-password 
Invalid `prisma.users.update()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\auth\auth.repository.ts:21:23

  18 };
  19 
  20 export const createNewOtp = async (data: CreateNewOtp) => {
→ 21   return prisma.users.update(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-14 21:02:31 [ERROR]: POST /user/otp-password 
Invalid `prisma.users.update()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\auth\auth.repository.ts:21:23

  18 };
  19 
  20 export const createNewOtp = async (data: CreateNewOtp) => {
→ 21   return prisma.users.update({
         where: {
           email: undefined,
       ?   id?: String,
       ?   AND?: usersWhereInput | usersWhereInput[],
       ?   OR?: usersWhereInput[],
       ?   NOT?: usersWhereInput | usersWhereInput[],
       ?   role?: EnumRoleFilter | Role,
       ?   full_name?: StringFilter | String,
       ?   password_hash?: StringFilter | String,
       ?   profile_picture?: StringNullableFilter | String | Null,
       ?   is_verified?: BoolFilter | Boolean,
       ?   created_at?: DateTimeFilter | DateTime,
       ?   updated_at?: DateTimeFilter | DateTime,
       ?   reset_password_otp?: StringNullableFilter | String | Null,
       ?   verify_otp?: StringNullableFilter | String | Null,
       ?   verify_otp_expires_at?: DateTimeNullableFilter | DateTime | Null,
       ?   bookings?: BookingsListRelationFilter,
       ?   reviews?: ReviewsListRelationFilter,
       ?   tenants?: TenantsListRelationFilter
         },
         data: {
           email: undefined,
           reset_password_otp: "436462"
         }
       })

Argument `where` of type usersWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?. {"name":"PrismaClientValidationError","clientVersion":"6.13.0"}
2025-08-14 21:20:43 [ERROR]: PATCH /user/reset-password Invalid OTP {"statusCode":401,"success":false,"message":"Invalid OTP"}
2025-08-14 21:31:22 [ERROR]: PATCH /user/reset-password Invalid OTP {"statusCode":401,"success":false,"message":"Invalid OTP"}
2025-08-18 19:03:11 [ERROR]: POST /auth/login 
Invalid `prisma.users.findUnique()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\auth\auth.repository.ts:9:23

  6 } from "../../types/user/users.types";
  7 
  8 export const findUserByEmail = async (email: string) => {
→ 9   return prisma.users.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-18 19:04:18 [ERROR]: POST /auth/login User not found {"statusCode":400,"success":false,"message":"User not found"}
2025-08-18 19:44:51 [ERROR]: POST /auth/login data and hash arguments required {}
2025-08-18 19:56:51 [ERROR]: POST /auth/login data and hash arguments required {}
2025-08-18 20:27:35 [ERROR]: POST /auth/login 
Invalid `prisma.users.findUnique()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\auth\auth.repository.ts:9:23

  6 } from "../../types/user/users.types";
  7 
  8 export const findUserByEmail = async (email: string) => {
→ 9   return prisma.users.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-18 20:28:22 [ERROR]: POST /auth/login 
Invalid `prisma.users.findUnique()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\auth\auth.repository.ts:9:23

  6 } from "../../types/user/users.types";
  7 
  8 export const findUserByEmail = async (email: string) => {
→ 9   return prisma.users.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-18 20:28:50 [ERROR]: POST /auth/login Unexpected non-whitespace character after JSON at position 90 (line 9 column 1) {"expose":true,"statusCode":400,"status":400,"body":"\r\n    {\r\n  \r\n \"email\": \"ariskaadiprasetyo@gmail.com\",\r\n  \"password_hash\": \"123\"\r\n  \r\n}\r\n\r\nx","type":"entity.parse.failed"}
2025-08-18 21:01:43 [ERROR]: POST /auth/login 
Invalid `prisma.users.findUnique()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\auth\auth.repository.ts:9:23

  6 } from "../../types/user/users.types";
  7 
  8 export const findUserByEmail = async (email: string) => {
→ 9   return prisma.users.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"users","database_location":"aws-0-us-west-1.pooler.supabase.com:6543"},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-18 21:02:32 [ERROR]: POST /auth/login 
Invalid `prisma.users.findUnique()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\auth\auth.repository.ts:9:23

  6 } from "../../types/user/users.types";
  7 
  8 export const findUserByEmail = async (email: string) => {
→ 9   return prisma.users.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"users","database_location":"aws-0-us-west-1.pooler.supabase.com:6543"},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-18 21:27:08 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-18 21:27:40 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-18 21:31:03 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-18 21:31:20 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-18 21:33:14 [ERROR]: GET /user/me 
Invalid `prisma.users.findUnique()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\user\user.respository.ts:4:23

  1 import { prisma } from "../../config/prisma";
  2 
  3 export const findUserById = async (userId: string) => {
→ 4   return prisma.users.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-18 21:38:37 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-18 21:41:59 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-18 21:42:33 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-18 21:43:57 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-18 21:46:27 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-18 21:48:14 [ERROR]: GET /user/me 
Invalid `prisma.users.findUnique()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\user\user.respository.ts:4:23

  1 import { prisma } from "../../config/prisma";
  2 
  3 export const findUserById = async (userId: string) => {
→ 4   return prisma.users.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-18 21:48:30 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-18 21:49:06 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-18 21:49:08 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-18 21:53:19 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-18 21:53:38 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-18 21:54:24 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-18 21:54:24 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-18 21:54:35 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-18 21:55:28 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-18 21:55:29 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-18 21:55:42 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-18 21:58:41 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-18 21:59:54 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-18 21:59:54 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-18 22:00:00 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-18 22:00:13 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-18 22:00:14 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-18 22:09:33 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-18 22:09:45 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-18 22:11:18 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-18 22:11:19 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-18 22:11:28 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-18 22:11:54 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-18 22:16:52 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-18 22:16:54 [ERROR]: GET /user/me Invalid token {"statusCode":401,"success":false,"message":"Invalid token"}
2025-08-18 22:16:57 [ERROR]: GET /user/me Invalid token {"statusCode":401,"success":false,"message":"Invalid token"}
2025-08-18 22:17:18 [ERROR]: GET /user/me Invalid token {"statusCode":401,"success":false,"message":"Invalid token"}
2025-08-18 22:17:22 [ERROR]: GET /user/me Invalid token {"statusCode":401,"success":false,"message":"Invalid token"}
2025-08-18 22:17:45 [ERROR]: POST /auth/login 
Invalid `prisma.users.findUnique()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\auth\auth.repository.ts:9:23

  6 } from "../../types/user/users.types";
  7 
  8 export const findUserByEmail = async (email: string) => {
→ 9   return prisma.users.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"users","database_location":"aws-0-us-west-1.pooler.supabase.com:6543"},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-18 22:19:31 [ERROR]: GET /user/me Invalid token {"statusCode":401,"success":false,"message":"Invalid token"}
2025-08-18 22:19:54 [ERROR]: GET /user/me Invalid token {"statusCode":401,"success":false,"message":"Invalid token"}
2025-08-18 22:23:31 [ERROR]: GET /user/me Invalid token {"statusCode":401,"success":false,"message":"Invalid token"}
2025-08-18 22:23:45 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-18 22:23:56 [ERROR]: GET /user/me Invalid token {"statusCode":401,"success":false,"message":"Invalid token"}
2025-08-18 22:24:09 [ERROR]: GET /user/me Invalid token {"statusCode":401,"success":false,"message":"Invalid token"}
2025-08-18 22:29:46 [ERROR]: GET /user/me Invalid token {"statusCode":401,"success":false,"message":"Invalid token"}
2025-08-19 19:41:18 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-19 19:51:52 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-19 19:52:43 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-19 19:54:55 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-19 19:55:41 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-19 19:55:48 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-19 19:58:36 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-19 20:05:54 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-20 19:07:09 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-20 19:40:00 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-20 19:40:49 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-20 21:15:12 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-20 22:58:20 [ERROR]: GET /user/me User not found {"statusCode":404,"success":false,"message":"User not found"}
2025-08-21 20:28:51 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-21 21:32:42 [ERROR]: POST /property/create Invalid property category {"statusCode":400,"success":false,"message":"Invalid property category"}
2025-08-21 21:34:57 [ERROR]: POST /property/create 
Invalid `prisma.tenants.findUnique()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\tenant\tenant.repository.ts:6:39

  3 export const findTenantByUserId = async (
  4   user_id: string
  5 ): Promise<string | null> => {
→ 6   const tenant = await prisma.tenants.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-21 21:36:08 [ERROR]: POST /property/create Invalid property category {"statusCode":400,"success":false,"message":"Invalid property category"}
2025-08-21 21:39:35 [ERROR]: POST /property/create Cannot read properties of undefined (reading 'toLowerCase') {}
2025-08-21 21:43:39 [ERROR]: POST /property/create Unexpected field {"name":"MulterError","message":"Unexpected field","code":"LIMIT_UNEXPECTED_FILE","field":"main_image","storageErrors":[]}
2025-08-21 21:45:44 [ERROR]: POST /property/create Wrong file extension! {"storageErrors":[]}
2025-08-21 21:47:16 [ERROR]: POST /property/create 
Invalid `prisma.properties.create()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:33:28

  30 };
  31 
  32 export const createPropertyRepository = async (data: PropertyTypes) => {
→ 33   return prisma.properties.create({
         data: {
           tenant_id: undefined,
           name: "Homestay Bromo Asri",
           description: "Penginapan nyaman dekat Gunung Bromo",
           address: "Jl. Raya Tumpang No. 12",
           city: "Malang",
           province: "Jawa Timur",
           zip_code: "65153",
           latitude: "-7.9778",
           longitude: "112.6341",
           main_image: "",
           property_category: "villa",
       +   tenant: {
       +     create: tenantsCreateWithoutPropertiesInput | tenantsUncheckedCreateWithoutPropertiesInput,
       +     connectOrCreate: tenantsCreateOrConnectWithoutPropertiesInput,
       +     connect: tenantsWhereUniqueInput
       +   }
         }
       })

Argument `tenant` is missing. {"name":"PrismaClientValidationError","clientVersion":"6.13.0"}
2025-08-22 19:38:27 [ERROR]: GET /room/all 
Invalid `prisma.rooms.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\rooms\rooms.repository.ts:18:29

  15 };
  16 
  17 export const findAllRoomsRepository = async () => {
→ 18   return await prisma.rooms.findMany(
The column `rooms.total_rooms` does not exist in the current database. {"code":"P2022","meta":{"modelName":"rooms","column":"rooms.total_rooms"},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-22 20:00:40 [ERROR]: POST /room/create/c7cd6c22-b8aa-405c-a612-52cb199085cb The "path" argument must be of type string. Received an instance of IncomingMessage {"code":"ERR_INVALID_ARG_TYPE"}
2025-08-22 20:01:22 [ERROR]: POST /room/create/c7cd6c22-b8aa-405c-a612-52cb199085cb The "path" argument must be of type string. Received an instance of IncomingMessage {"code":"ERR_INVALID_ARG_TYPE"}
2025-08-22 20:05:09 [ERROR]: POST /room/create/c7cd6c22-b8aa-405c-a612-52cb199085cb The "path" argument must be of type string. Received an instance of IncomingMessage {"code":"ERR_INVALID_ARG_TYPE"}
2025-08-22 20:07:02 [ERROR]: POST /room/create/c7cd6c22-b8aa-405c-a612-52cb199085cb Unexpected field {"name":"MulterError","message":"Unexpected field","code":"LIMIT_UNEXPECTED_FILE","field":"image","storageErrors":[]}
2025-08-22 20:15:16 [ERROR]: POST /room/create/c7cd6c22-b8aa-405c-a612-52cb199085cb 
Invalid `prisma.rooms.create()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\rooms\rooms.repository.ts:5:29

  2 import { RoomsType } from "../../types/rooms/rooms.types";
  3 
  4 export const createRoomRepository = async (data: RoomsType) => {
→ 5   return await prisma.rooms.create({
        data: {
          property_id: "c7cd6c22-b8aa-405c-a612-52cb199085cb",
          name: "Deluxe Room",
          description: "kamar luas dengan AC",
          base_price: "500000",
          capacity: "4",
                    ~~~
          image: "",
          total_rooms: "10"
        }
      })

Argument `capacity`: Invalid value provided. Expected Int, provided String. {"name":"PrismaClientValidationError","clientVersion":"6.13.0"}
2025-08-22 20:20:20 [ERROR]: POST /room/create/c7cd6c22-b8aa-405c-a612-52cb199085cb 
Invalid `prisma.rooms.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\rooms\rooms.repository.ts:9:29

  6 };
  7 
  8 export const findRoomRepository = async (property_id: string) => {
→ 9   return await prisma.rooms.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-22 20:26:22 [ERROR]: POST /room/create/c7cd6c22-b8aa-405c-a612-52cb199085cb 
Invalid `prisma.rooms.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\rooms\rooms.repository.ts:9:29

  6 };
  7 
  8 export const findRoomRepository = async (property_id: string) => {
→ 9   return await prisma.rooms.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-22 20:27:29 [ERROR]: POST /room/create/c7cd6c22-b8aa-405c-a612-52cb199085cb 
Invalid `prisma.rooms.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\rooms\rooms.repository.ts:9:29

  6 };
  7 
  8 export const findRoomRepository = async (property_id: string) => {
→ 9   return await prisma.rooms.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-22 20:29:10 [ERROR]: POST /room/create/c7cd6c22-b8aa-405c-a612-52cb199085cb 
Invalid `prisma.rooms.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\rooms\rooms.repository.ts:9:29

  6 };
  7 
  8 export const findRoomRepository = async (property_id: string) => {
→ 9   return await prisma.rooms.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-22 20:29:59 [ERROR]: POST /room/create/c7cd6c22-b8aa-405c-a612-52cb199085cb 
Invalid `prisma.rooms.create()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\rooms\rooms.repository.ts:5:29

  2 import { RoomsType } from "../../types/rooms/rooms.types";
  3 
  4 export const createRoomRepository = async (data: RoomsType) => {
→ 5   return await prisma.rooms.create({
        data: {
          property_id: "c7cd6c22-b8aa-405c-a612-52cb199085cb",
          name: "Deluxe Room",
          description: "kamar luas dengan AC",
          base_price: "500000",
          capacity: 4,
          image: "",
          total_rooms: "10"
                       ~~~~
        }
      })

Argument `total_rooms`: Invalid value provided. Expected Int, provided String. {"name":"PrismaClientValidationError","clientVersion":"6.13.0"}
2025-08-22 20:31:34 [ERROR]: POST /room/create/c7cd6c22-b8aa-405c-a612-52cb199085cb 
Invalid `prisma.rooms.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\rooms\rooms.repository.ts:9:29

  6 };
  7 
  8 export const findRoomRepository = async (property_id: string) => {
→ 9   return await prisma.rooms.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-22 20:33:18 [ERROR]: POST /room/create/c7cd6c22-b8aa-405c-a612-52cb199085cb 
Invalid `prisma.rooms.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\rooms\rooms.repository.ts:9:29

  6 };
  7 
  8 export const findRoomRepository = async (property_id: string) => {
→ 9   return await prisma.rooms.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-22 20:35:13 [ERROR]: POST /room/create/c7cd6c22-b8aa-405c-a612-52cb199085cb 
Invalid `prisma.rooms.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\rooms\rooms.repository.ts:9:29

  6 };
  7 
  8 export const findRoomRepository = async (property_id: string) => {
→ 9   return await prisma.rooms.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-22 20:36:29 [ERROR]: POST /room/create/c7cd6c22-b8aa-405c-a612-52cb199085cb 
Invalid `prisma.rooms.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\rooms\rooms.repository.ts:9:29

  6 };
  7 
  8 export const findRoomRepository = async (property_id: string) => {
→ 9   return await prisma.rooms.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-22 20:37:19 [ERROR]: GET /room/all 
Invalid `prisma.rooms.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\rooms\rooms.repository.ts:18:29

  15 };
  16 
  17 export const findAllRoomsRepository = async () => {
→ 18   return await prisma.rooms.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-22 21:18:17 [ERROR]: POST /property/create Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-22 21:32:33 [ERROR]: POST /room/create/c7cd6c22-b8aa-405c-a612-52cb199085cb 
Invalid `prisma.rooms.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\rooms\rooms.repository.ts:9:29

  6 };
  7 
  8 export const findRoomRepository = async (property_id: string) => {
→ 9   return await prisma.rooms.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-22 21:35:29 [ERROR]: POST /room/create/c7cd6c22-b8aa-405c-a612-52cb199085cb 
Invalid `prisma.rooms.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\rooms\rooms.repository.ts:9:29

  6 };
  7 
  8 export const findRoomRepository = async (property_id: string) => {
→ 9   return await prisma.rooms.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-22 22:15:54 [ERROR]: POST /room/create/c7cd6c22-b8aa-405c-a612-52cb199085cb 
Invalid `prisma.rooms.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\rooms\rooms.repository.ts:9:29

  6 };
  7 
  8 export const findRoomRepository = async (property_id: string) => {
→ 9   return await prisma.rooms.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-23 20:01:36 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-23 20:31:58 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-23 20:33:04 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-23 20:36:22 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-23 20:47:04 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-23 20:51:42 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-23 20:53:31 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-23 20:53:34 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:10:28

   7 }) => {
   8   const { property_category } = filters;
   9 
→ 10   return prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"properties","database_location":"aws-0-us-west-1.pooler.supabase.com:6543"},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-23 20:53:37 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:10:28

   7 }) => {
   8   const { property_category } = filters;
   9 
→ 10   return prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"properties","database_location":"aws-0-us-west-1.pooler.supabase.com:6543"},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-23 20:53:43 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:10:28

   7 }) => {
   8   const { property_category } = filters;
   9 
→ 10   return prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"properties","database_location":"aws-0-us-west-1.pooler.supabase.com:6543"},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-23 20:53:50 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:10:28

   7 }) => {
   8   const { property_category } = filters;
   9 
→ 10   return prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"properties","database_location":"aws-0-us-west-1.pooler.supabase.com:6543"},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-23 20:54:47 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-23 21:10:18 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-23 21:20:29 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-23 21:35:27 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:10:28

   7 }) => {
   8   const { property_category } = filters;
   9 
→ 10   return prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"properties","database_location":"aws-0-us-west-1.pooler.supabase.com:6543"},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-24 19:04:02 [ERROR]: POST /auth/logout Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-24 19:04:16 [ERROR]: POST /auth/logout Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-24 19:12:33 [ERROR]: POST /auth/logout Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-24 19:13:50 [ERROR]: POST /auth/logout Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-24 19:15:33 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-24 19:15:56 [ERROR]: POST /auth/login User not found {"statusCode":400,"success":false,"message":"User not found"}
2025-08-24 19:17:23 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-24 22:49:19 [ERROR]: GET /property/get/4a963ec1-1b33-4bc9-b3c4-c2002fab1d3b Property not found {"statusCode":404,"success":false,"message":"Property not found"}
2025-08-24 23:22:09 [ERROR]: PATCH /user/update-profile Cannot destructure property 'full_name' of 'data' as it is undefined. {}
2025-08-25 00:16:22 [ERROR]: PATCH /tenant/update Cannot read properties of undefined (reading 'role') {}
2025-08-25 19:12:52 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-25 19:18:50 [ERROR]: POST /tenant/register Cannot read properties of undefined (reading 'role') {}
2025-08-25 19:33:19 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-25 19:45:46 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:10:28

   7 }) => {
   8   const { property_category } = filters;
   9 
→ 10   return prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"properties","database_location":"aws-0-us-west-1.pooler.supabase.com:6543"},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-25 19:49:20 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-25 19:53:19 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:10:28

   7 }) => {
   8   const { property_category } = filters;
   9 
→ 10   return prisma.properties.findMany(
Timed out fetching a new connection from the connection pool. More info: http://pris.ly/d/connection-pool (Current connection pool timeout: 10, connection limit: 13) {"code":"P2024","meta":{"modelName":"properties","connection_limit":13,"timeout":10},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-25 19:53:19 [ERROR]: GET /user/me 
Invalid `prisma.users.findUnique()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\user\user.respository.ts:5:23

  2 import { UpdateUser } from "../../types/user/users.types";
  3 
  4 export const findUserById = async (userId: string) => {
→ 5   return prisma.users.findUnique(
Timed out fetching a new connection from the connection pool. More info: http://pris.ly/d/connection-pool (Current connection pool timeout: 10, connection limit: 13) {"code":"P2024","meta":{"modelName":"users","connection_limit":13,"timeout":10},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-25 19:53:26 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:10:28

   7 }) => {
   8   const { property_category } = filters;
   9 
→ 10   return prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"properties","database_location":"aws-0-us-west-1.pooler.supabase.com:6543"},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-25 19:53:33 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:10:28

   7 }) => {
   8   const { property_category } = filters;
   9 
→ 10   return prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"properties","database_location":"aws-0-us-west-1.pooler.supabase.com:6543"},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-25 19:53:42 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:10:28

   7 }) => {
   8   const { property_category } = filters;
   9 
→ 10   return prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"properties","database_location":"aws-0-us-west-1.pooler.supabase.com:6543"},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-25 19:54:04 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:10:28

   7 }) => {
   8   const { property_category } = filters;
   9 
→ 10   return prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-25 19:54:10 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:10:28

   7 }) => {
   8   const { property_category } = filters;
   9 
→ 10   return prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-25 19:54:17 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:10:28

   7 }) => {
   8   const { property_category } = filters;
   9 
→ 10   return prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-25 19:54:28 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:10:28

   7 }) => {
   8   const { property_category } = filters;
   9 
→ 10   return prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-25 23:30:25 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:10:28

   7 }) => {
   8   const { property_category } = filters;
   9 
→ 10   return prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-25 23:30:32 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:10:28

   7 }) => {
   8   const { property_category } = filters;
   9 
→ 10   return prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-25 23:30:32 [ERROR]: GET /user/me 
Invalid `prisma.users.findUnique()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\user\user.respository.ts:7:23

  4 import AppError from "../../errors/AppError";
  5 
  6 export const findUserById = async (userId: string) => {
→ 7   return prisma.users.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-25 23:30:38 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:10:28

   7 }) => {
   8   const { property_category } = filters;
   9 
→ 10   return prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-25 23:30:46 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:10:28

   7 }) => {
   8   const { property_category } = filters;
   9 
→ 10   return prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-25 23:31:05 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:10:28

   7 }) => {
   8   const { property_category } = filters;
   9 
→ 10   return prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-25 23:31:05 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:10:28

   7 }) => {
   8   const { property_category } = filters;
   9 
→ 10   return prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-25 23:31:05 [ERROR]: GET /user/me 
Invalid `prisma.users.findUnique()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\user\user.respository.ts:7:23

  4 import AppError from "../../errors/AppError";
  5 
  6 export const findUserById = async (userId: string) => {
→ 7   return prisma.users.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-25 23:31:13 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:10:28

   7 }) => {
   8   const { property_category } = filters;
   9 
→ 10   return prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-26 14:12:44 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-26 14:12:49 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:10:28

   7 }) => {
   8   const { property_category } = filters;
   9 
→ 10   return prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-26 14:13:57 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-26 14:16:30 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-26 14:17:43 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-26 14:17:53 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:10:28

   7 }) => {
   8   const { property_category } = filters;
   9 
→ 10   return prisma.properties.findMany(
Timed out fetching a new connection from the connection pool. More info: http://pris.ly/d/connection-pool (Current connection pool timeout: 10, connection limit: 13) {"code":"P2024","meta":{"modelName":"properties","connection_limit":13,"timeout":10},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-26 14:18:47 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-26 17:29:06 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-26 17:37:16 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-26 17:52:28 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-26 17:53:20 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-26 17:53:58 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:10:28

   7 }) => {
   8   const { property_category } = filters;
   9 
→ 10   return prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"properties","database_location":"aws-0-us-west-1.pooler.supabase.com:6543"},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-26 17:55:16 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-26 17:56:28 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-26 19:38:20 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:10:28

   7 }) => {
   8   const { property_category } = filters;
   9 
→ 10   return prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"properties","database_location":"aws-0-us-west-1.pooler.supabase.com:6543"},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-26 19:38:30 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:10:28

   7 }) => {
   8   const { property_category } = filters;
   9 
→ 10   return prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"properties","database_location":"aws-0-us-west-1.pooler.supabase.com:6543"},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-26 19:47:33 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-26 19:48:58 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-26 19:50:29 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-26 19:58:10 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:10:28

   7 }) => {
   8   const { property_category } = filters;
   9 
→ 10   return prisma.properties.findMany(
Server has closed the connection. {"code":"P1017","meta":{"modelName":"properties"},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-26 21:48:24 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:10:28

   7 }) => {
   8   const { property_category } = filters;
   9 
→ 10   return prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"properties","database_location":"aws-0-us-west-1.pooler.supabase.com:6543"},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-26 21:48:31 [ERROR]: GET /user/me 
Invalid `prisma.users.findUnique()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\user\user.respository.ts:7:23

  4 import AppError from "../../errors/AppError";
  5 
  6 export const findUserById = async (userId: string) => {
→ 7   return prisma.users.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"users","database_location":"aws-0-us-west-1.pooler.supabase.com:6543"},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-26 21:48:31 [ERROR]: GET /room/search 
Invalid `prisma.rooms.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\rooms\rooms.repository.ts:29:29

  26   propertyname: string,
  27   roomname: string
  28 ) => {
→ 29   return await prisma.rooms.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"rooms","database_location":"aws-0-us-west-1.pooler.supabase.com:6543"},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-26 21:48:37 [ERROR]: GET /room/search 
Invalid `prisma.rooms.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\rooms\rooms.repository.ts:29:29

  26   propertyname: string,
  27   roomname: string
  28 ) => {
→ 29   return await prisma.rooms.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"rooms","database_location":"aws-0-us-west-1.pooler.supabase.com:6543"},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-26 21:48:45 [ERROR]: GET /room/search 
Invalid `prisma.rooms.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\rooms\rooms.repository.ts:29:29

  26   propertyname: string,
  27   roomname: string
  28 ) => {
→ 29   return await prisma.rooms.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"rooms","database_location":"aws-0-us-west-1.pooler.supabase.com:6543"},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-26 22:41:01 [ERROR]: POST /room/create/a8da1ec9-239f-45a5-a58d-be76da2fc308 Unexpected field {"name":"MulterError","message":"Unexpected field","code":"LIMIT_UNEXPECTED_FILE","field":"images","storageErrors":[]}
2025-08-27 18:50:27 [ERROR]: GET /user/me User not found {"statusCode":404,"success":false,"message":"User not found"}
2025-08-27 18:51:09 [ERROR]: GET /user/me User not found {"statusCode":404,"success":false,"message":"User not found"}
2025-08-27 18:51:13 [ERROR]: GET /user/me User not found {"statusCode":404,"success":false,"message":"User not found"}
2025-08-27 19:54:18 [ERROR]: POST /property/create Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-27 20:25:44 [ERROR]: GET /property/tenant Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-27 20:26:34 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-27 20:27:19 [ERROR]: GET /property/tenant Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-27 20:30:28 [ERROR]: GET /property/tenant Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-27 20:32:37 [ERROR]: GET /property/tenant Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-27 20:34:32 [ERROR]: GET /property/tenant Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-27 20:35:06 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:10:28

   7 }) => {
   8   const { property_category } = filters;
   9 
→ 10   return prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-27 20:36:58 [ERROR]: GET /property/tenant Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-27 20:37:20 [ERROR]: GET /property/tenant Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-27 20:38:31 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-27 20:42:08 [ERROR]: GET /property/tenant Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-27 20:44:03 [ERROR]: GET /property/tenant Unauthorized access {"statusCode":401,"success":false,"message":"Unauthorized access"}
2025-08-27 20:44:12 [ERROR]: GET /property/tenant Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-27 20:44:29 [ERROR]: GET /property/tenant Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-27 20:44:40 [ERROR]: GET /property/tenant Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-27 20:45:37 [ERROR]: GET /property/ Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-27 20:49:29 [ERROR]: GET /property/tenant Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-27 20:49:42 [ERROR]: GET /property/tenant Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-27 20:52:10 [ERROR]: GET /property/tenant Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-27 20:53:52 [ERROR]: GET /property/tenant Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-27 20:54:58 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-27 21:39:01 [ERROR]: DELETE /room/delete/b80ceab2-a895-437f-8f59-4ea7f91c7fef 
Invalid `prisma.rooms.delete()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\rooms\rooms.repository.ts:80:35

  77 };
  78 
  79 export const deleteRoomByIdRepository = async (id: string) => {
→ 80   return await prisma.rooms.delete(
Foreign key constraint violated on the constraint: `room_images_room_id_fkey` {"code":"P2003","meta":{"modelName":"rooms","constraint":"room_images_room_id_fkey"},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-27 21:40:19 [ERROR]: DELETE /room/delete/b80ceab2-a895-437f-8f59-4ea7f91c7fef 
Invalid `prisma.rooms.delete()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\rooms\rooms.repository.ts:80:35

  77 };
  78 
  79 export const deleteRoomByIdRepository = async (id: string) => {
→ 80   return await prisma.rooms.delete(
Foreign key constraint violated on the constraint: `room_images_room_id_fkey` {"code":"P2003","meta":{"modelName":"rooms","constraint":"room_images_room_id_fkey"},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-27 21:40:55 [ERROR]: DELETE /room/delete/b80ceab2-a895-437f-8f59-4ea7f91c7fef 
Invalid `prisma.rooms.delete()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\rooms\rooms.repository.ts:80:35

  77 };
  78 
  79 export const deleteRoomByIdRepository = async (id: string) => {
→ 80   return await prisma.rooms.delete(
Foreign key constraint violated on the constraint: `room_images_room_id_fkey` {"code":"P2003","meta":{"modelName":"rooms","constraint":"room_images_room_id_fkey"},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-28 19:50:06 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:10:28

   7 }) => {
   8   const { property_category } = filters;
   9 
→ 10   return prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-28 19:50:06 [ERROR]: GET /user/me 
Invalid `prisma.users.findUnique()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\user\user.respository.ts:7:23

  4 import AppError from "../../errors/AppError";
  5 
  6 export const findUserById = async (userId: string) => {
→ 7   return prisma.users.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-28 20:36:54 [ERROR]: POST /room/create 
Invalid `prisma.rooms.create()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\rooms\rooms.repository.ts:5:29

  2 import { RoomsType } from "../../types/rooms/rooms.types";
  3 
  4 export const createRoomRepository = async (data: RoomsType) => {
→ 5   return await prisma.rooms.create(
Foreign key constraint violated on the constraint: `rooms_property_id_fkey` {"code":"P2003","meta":{"modelName":"rooms","constraint":"rooms_property_id_fkey"},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-28 20:46:32 [ERROR]: GET /user/me 
Invalid `prisma.users.findUnique()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\user\user.respository.ts:7:23

  4 import AppError from "../../errors/AppError";
  5 
  6 export const findUserById = async (userId: string) => {
→ 7   return prisma.users.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"users","database_location":"aws-0-us-west-1.pooler.supabase.com:6543"},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-28 20:59:14 [ERROR]: GET /property/tenant Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-28 21:00:45 [ERROR]: GET /property/tenant Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-28 21:00:47 [ERROR]: GET /property/tenant Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-28 22:04:01 [ERROR]: GET /property/nearby 
Invalid `prisma.$queryRawUnsafe()` invocation:


Raw query failed. Code: `42704`. Message: `ERROR: type "double" does not exist` {"code":"P2010","meta":{"code":"42704","message":"ERROR: type \"double\" does not exist"},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-28 22:07:52 [ERROR]: GET /property/nearby 
Invalid `prisma.$queryRawUnsafe()` invocation:


Raw query failed. Code: `42803`. Message: `ERROR: column "p.id" must appear in the GROUP BY clause or be used in an aggregate function` {"code":"P2010","meta":{"code":"42803","message":"ERROR: column \"p.id\" must appear in the GROUP BY clause or be used in an aggregate function"},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-28 22:46:48 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-28 22:46:59 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-28 22:47:06 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-28 22:48:44 [ERROR]: GET /property/nearby latitude, longitude, and radius are required {"statusCode":400,"success":false,"message":"latitude, longitude, and radius are required"}
2025-08-28 22:48:44 [ERROR]: GET /property/nearby latitude, longitude, and radius are required {"statusCode":400,"success":false,"message":"latitude, longitude, and radius are required"}
2025-08-28 22:48:46 [ERROR]: GET /property/nearby latitude, longitude, and radius are required {"statusCode":400,"success":false,"message":"latitude, longitude, and radius are required"}
2025-08-28 22:48:46 [ERROR]: GET /property/nearby latitude, longitude, and radius are required {"statusCode":400,"success":false,"message":"latitude, longitude, and radius are required"}
2025-08-28 22:48:47 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-28 22:48:47 [ERROR]: GET /property/nearby latitude, longitude, and radius are required {"statusCode":400,"success":false,"message":"latitude, longitude, and radius are required"}
2025-08-28 22:48:48 [ERROR]: GET /property/nearby latitude, longitude, and radius are required {"statusCode":400,"success":false,"message":"latitude, longitude, and radius are required"}
2025-08-28 22:48:48 [ERROR]: GET /property/nearby latitude, longitude, and radius are required {"statusCode":400,"success":false,"message":"latitude, longitude, and radius are required"}
2025-08-28 22:48:49 [ERROR]: GET /property/nearby latitude, longitude, and radius are required {"statusCode":400,"success":false,"message":"latitude, longitude, and radius are required"}
2025-08-28 22:48:51 [ERROR]: GET /property/nearby latitude, longitude, and radius are required {"statusCode":400,"success":false,"message":"latitude, longitude, and radius are required"}
2025-08-28 22:48:51 [ERROR]: GET /property/nearby latitude, longitude, and radius are required {"statusCode":400,"success":false,"message":"latitude, longitude, and radius are required"}
2025-08-28 22:48:55 [ERROR]: GET /property/nearby latitude, longitude, and radius are required {"statusCode":400,"success":false,"message":"latitude, longitude, and radius are required"}
2025-08-28 22:48:55 [ERROR]: GET /property/nearby latitude, longitude, and radius are required {"statusCode":400,"success":false,"message":"latitude, longitude, and radius are required"}
2025-08-28 22:49:10 [ERROR]: GET /property/nearby latitude, longitude, and radius are required {"statusCode":400,"success":false,"message":"latitude, longitude, and radius are required"}
2025-08-28 22:49:10 [ERROR]: GET /property/nearby latitude, longitude, and radius are required {"statusCode":400,"success":false,"message":"latitude, longitude, and radius are required"}
2025-08-28 22:49:19 [ERROR]: GET /property/nearby latitude, longitude, and radius are required {"statusCode":400,"success":false,"message":"latitude, longitude, and radius are required"}
2025-08-28 22:49:19 [ERROR]: GET /property/nearby latitude, longitude, and radius are required {"statusCode":400,"success":false,"message":"latitude, longitude, and radius are required"}
2025-08-28 22:49:31 [ERROR]: GET /property/nearby latitude, longitude, and radius are required {"statusCode":400,"success":false,"message":"latitude, longitude, and radius are required"}
2025-08-28 22:49:31 [ERROR]: GET /property/nearby latitude, longitude, and radius are required {"statusCode":400,"success":false,"message":"latitude, longitude, and radius are required"}
2025-08-28 22:49:35 [ERROR]: GET /property/nearby latitude, longitude, and radius are required {"statusCode":400,"success":false,"message":"latitude, longitude, and radius are required"}
2025-08-28 22:49:35 [ERROR]: GET /property/nearby latitude, longitude, and radius are required {"statusCode":400,"success":false,"message":"latitude, longitude, and radius are required"}
2025-08-28 22:49:37 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-28 22:51:38 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-28 23:14:28 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-29 17:32:07 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-29 17:32:12 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:10:28

   7 }) => {
   8   const { property_category } = filters;
   9 
→ 10   return prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-29 17:32:18 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:10:28

   7 }) => {
   8   const { property_category } = filters;
   9 
→ 10   return prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-29 17:32:25 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:10:28

   7 }) => {
   8   const { property_category } = filters;
   9 
→ 10   return prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-29 17:32:34 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:10:28

   7 }) => {
   8   const { property_category } = filters;
   9 
→ 10   return prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-08-29 17:33:59 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-29 17:36:22 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-29 17:41:59 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-29 20:15:00 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-29 21:27:54 [ERROR]: GET /user/me 
Invalid `prisma.users.findUnique()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\user\user.respository.ts:7:23

  4 import AppError from "../../errors/AppError";
  5 
  6 export const findUserById = async (userId: string) => {
→ 7   return prisma.users.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"users","database_location":"aws-0-us-west-1.pooler.supabase.com:6543"},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-29 21:27:54 [ERROR]: GET /room/search 
Invalid `prisma.rooms.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\rooms\rooms.repository.ts:103:29

  100   propertyname: string,
  101   roomname: string
  102 ) => {
→ 103   return await prisma.rooms.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"rooms","database_location":"aws-0-us-west-1.pooler.supabase.com:6543"},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-29 21:28:00 [ERROR]: GET /room/search 
Invalid `prisma.rooms.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\rooms\rooms.repository.ts:103:29

  100   propertyname: string,
  101   roomname: string
  102 ) => {
→ 103   return await prisma.rooms.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"rooms","database_location":"aws-0-us-west-1.pooler.supabase.com:6543"},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-29 21:28:08 [ERROR]: GET /room/search 
Invalid `prisma.rooms.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\rooms\rooms.repository.ts:103:29

  100   propertyname: string,
  101   roomname: string
  102 ) => {
→ 103   return await prisma.rooms.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"rooms","database_location":"aws-0-us-west-1.pooler.supabase.com:6543"},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-29 21:29:57 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-29 21:32:18 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-29 23:51:55 [ERROR]: GET /property/nearby 
Invalid `prisma.$queryRawUnsafe()` invocation:


Raw query failed. Code: `22007`. Message: `ERROR: invalid input syntax for type date: "undefined"` {"code":"P2010","meta":{"code":"22007","message":"ERROR: invalid input syntax for type date: \"undefined\""},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-29 23:51:58 [ERROR]: GET /property/nearby 
Invalid `prisma.$queryRawUnsafe()` invocation:


Raw query failed. Code: `22007`. Message: `ERROR: invalid input syntax for type date: "undefined"` {"code":"P2010","meta":{"code":"22007","message":"ERROR: invalid input syntax for type date: \"undefined\""},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-29 23:52:29 [ERROR]: GET /property/nearby 
Invalid `prisma.$queryRawUnsafe()` invocation:


Raw query failed. Code: `22007`. Message: `ERROR: invalid input syntax for type date: "undefined"` {"code":"P2010","meta":{"code":"22007","message":"ERROR: invalid input syntax for type date: \"undefined\""},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-29 23:52:31 [ERROR]: GET /property/nearby 
Invalid `prisma.$queryRawUnsafe()` invocation:


Raw query failed. Code: `22007`. Message: `ERROR: invalid input syntax for type date: "undefined"` {"code":"P2010","meta":{"code":"22007","message":"ERROR: invalid input syntax for type date: \"undefined\""},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-29 23:52:34 [ERROR]: GET /property/nearby 
Invalid `prisma.$queryRawUnsafe()` invocation:


Raw query failed. Code: `22007`. Message: `ERROR: invalid input syntax for type date: "undefined"` {"code":"P2010","meta":{"code":"22007","message":"ERROR: invalid input syntax for type date: \"undefined\""},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-29 23:52:39 [ERROR]: GET /property/nearby 
Invalid `prisma.$queryRawUnsafe()` invocation:


Raw query failed. Code: `22007`. Message: `ERROR: invalid input syntax for type date: "undefined"` {"code":"P2010","meta":{"code":"22007","message":"ERROR: invalid input syntax for type date: \"undefined\""},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-29 23:53:39 [ERROR]: GET /property/nearby 
Invalid `prisma.$queryRawUnsafe()` invocation:


Raw query failed. Code: `22007`. Message: `ERROR: invalid input syntax for type date: "undefined"` {"code":"P2010","meta":{"code":"22007","message":"ERROR: invalid input syntax for type date: \"undefined\""},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-29 23:53:41 [ERROR]: GET /property/nearby 
Invalid `prisma.$queryRawUnsafe()` invocation:


Raw query failed. Code: `22007`. Message: `ERROR: invalid input syntax for type date: "undefined"` {"code":"P2010","meta":{"code":"22007","message":"ERROR: invalid input syntax for type date: \"undefined\""},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-29 23:53:44 [ERROR]: GET /property/nearby 
Invalid `prisma.$queryRawUnsafe()` invocation:


Raw query failed. Code: `22007`. Message: `ERROR: invalid input syntax for type date: "undefined"` {"code":"P2010","meta":{"code":"22007","message":"ERROR: invalid input syntax for type date: \"undefined\""},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-29 23:53:50 [ERROR]: GET /property/nearby 
Invalid `prisma.$queryRawUnsafe()` invocation:


Raw query failed. Code: `22007`. Message: `ERROR: invalid input syntax for type date: "undefined"` {"code":"P2010","meta":{"code":"22007","message":"ERROR: invalid input syntax for type date: \"undefined\""},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-29 23:54:27 [ERROR]: GET /property/nearby 
Invalid `prisma.$queryRawUnsafe()` invocation:


Raw query failed. Code: `22007`. Message: `ERROR: invalid input syntax for type date: "undefined"` {"code":"P2010","meta":{"code":"22007","message":"ERROR: invalid input syntax for type date: \"undefined\""},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-29 23:56:21 [ERROR]: GET /property/nearby 
Invalid `prisma.$queryRawUnsafe()` invocation:


Raw query failed. Code: `22007`. Message: `ERROR: invalid input syntax for type date: "undefined"` {"code":"P2010","meta":{"code":"22007","message":"ERROR: invalid input syntax for type date: \"undefined\""},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-29 23:56:26 [ERROR]: GET /property/nearby 
Invalid `prisma.$queryRawUnsafe()` invocation:


Raw query failed. Code: `22007`. Message: `ERROR: invalid input syntax for type date: "undefined"` {"code":"P2010","meta":{"code":"22007","message":"ERROR: invalid input syntax for type date: \"undefined\""},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-29 23:56:28 [ERROR]: GET /property/nearby 
Invalid `prisma.$queryRawUnsafe()` invocation:


Raw query failed. Code: `22007`. Message: `ERROR: invalid input syntax for type date: "undefined"` {"code":"P2010","meta":{"code":"22007","message":"ERROR: invalid input syntax for type date: \"undefined\""},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-29 23:56:31 [ERROR]: GET /property/nearby 
Invalid `prisma.$queryRawUnsafe()` invocation:


Raw query failed. Code: `22007`. Message: `ERROR: invalid input syntax for type date: "undefined"` {"code":"P2010","meta":{"code":"22007","message":"ERROR: invalid input syntax for type date: \"undefined\""},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-29 23:56:37 [ERROR]: GET /property/nearby 
Invalid `prisma.$queryRawUnsafe()` invocation:


Raw query failed. Code: `22007`. Message: `ERROR: invalid input syntax for type date: "undefined"` {"code":"P2010","meta":{"code":"22007","message":"ERROR: invalid input syntax for type date: \"undefined\""},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-29 23:59:06 [ERROR]: GET /property/nearby 
Invalid `prisma.$queryRawUnsafe()` invocation:


Raw query failed. Code: `22007`. Message: `ERROR: invalid input syntax for type date: "undefined"` {"code":"P2010","meta":{"code":"22007","message":"ERROR: invalid input syntax for type date: \"undefined\""},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-29 23:59:08 [ERROR]: GET /property/nearby 
Invalid `prisma.$queryRawUnsafe()` invocation:


Raw query failed. Code: `22007`. Message: `ERROR: invalid input syntax for type date: "undefined"` {"code":"P2010","meta":{"code":"22007","message":"ERROR: invalid input syntax for type date: \"undefined\""},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-30 21:34:47 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-30 21:37:23 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:10:28

   7 }) => {
   8   const { property_category } = filters;
   9 
→ 10   return prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"properties","database_location":"aws-0-us-west-1.pooler.supabase.com:6543"},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-31 18:33:41 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-31 18:37:01 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-31 18:50:57 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-31 18:57:59 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-31 19:33:17 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-31 19:35:39 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-31 19:40:43 [ERROR]: GET /property/nearby 
Invalid `prisma.$queryRawUnsafe()` invocation:


Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"database_location":"aws-0-us-west-1.pooler.supabase.com:6543"},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-08-31 19:41:19 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-31 19:42:42 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-31 19:48:28 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-31 19:58:49 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-31 20:02:58 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-31 20:03:58 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-31 20:04:46 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-31 20:05:20 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-31 21:29:42 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-31 21:47:36 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-31 22:22:02 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-31 22:22:22 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-31 22:26:22 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-31 22:28:58 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-31 22:33:05 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-31 22:45:33 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-31 23:15:31 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-31 23:17:43 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-08-31 23:21:54 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-01 19:52:04 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-01 19:52:10 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:10:28

   7 }) => {
   8   const { property_category } = filters;
   9 
→ 10   return prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-09-01 19:52:16 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:10:28

   7 }) => {
   8   const { property_category } = filters;
   9 
→ 10   return prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-09-01 19:52:23 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:10:28

   7 }) => {
   8   const { property_category } = filters;
   9 
→ 10   return prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-09-01 19:53:34 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-01 19:54:25 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-01 20:02:02 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-01 20:08:40 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-01 22:04:53 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-01 22:06:54 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-01 22:17:37 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-01 22:17:37 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-01 22:17:58 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-01 22:17:58 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-01 22:18:20 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-01 22:18:20 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-01 22:18:36 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-01 22:18:36 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-01 22:18:45 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-01 22:18:45 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-01 22:18:58 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-01 22:18:58 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-01 22:19:20 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-01 22:19:21 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-01 22:19:47 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-01 22:19:47 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-01 22:20:07 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-01 22:20:07 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-01 22:23:36 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-01 22:25:55 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-01 22:38:54 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-01 22:39:09 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-01 22:55:59 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-01 22:59:59 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-01 23:05:36 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-01 23:10:29 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-02 19:50:16 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-02 19:52:04 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-02 19:55:46 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:12:28

   9 }) => {
  10   const { property_category, min_price, max_price } = filters;
  11 
→ 12   return prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"properties","database_location":"aws-0-us-west-1.pooler.supabase.com:6543"},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-09-02 20:02:19 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:12:28

   9 }) => {
  10   const { property_category, min_price, max_price } = filters;
  11 
→ 12   return prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"properties","database_location":"aws-0-us-west-1.pooler.supabase.com:6543"},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-09-02 20:29:09 [ERROR]: GET /property/tenant 
Invalid `prisma.tenants.findUnique()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:50:25

  47 };
  48 
  49 export const getTenantWithPropertiesByUserId = async (userId: string) => {
→ 50   return prisma.tenants.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"tenants","database_location":"aws-0-us-west-1.pooler.supabase.com:6543"},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-09-02 22:42:27 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-02 22:43:50 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-02 22:53:33 [ERROR]: GET /user/me User not found {"statusCode":404,"success":false,"message":"User not found"}
2025-09-02 22:54:12 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-03 21:08:18 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-03 21:09:19 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-04 16:43:55 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-04 16:53:54 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-04 16:55:01 [ERROR]: POST /auth/login Invalid password {"statusCode":401,"success":false,"message":"Invalid password"}
2025-09-04 18:16:54 [ERROR]: POST /user/otp-password Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-04 18:20:36 [ERROR]: PATCH /user/reset-password Cannot destructure property 'oldPassword' of 'req.body' as it is undefined. {}
2025-09-04 18:23:49 [ERROR]: PATCH /user/reset-password Invalid password {"statusCode":401,"success":false,"message":"Invalid password"}
2025-09-04 21:30:48 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:16:28

  13 }) => {
  14   const { property_category, min_price, max_price } = filters;
  15 
→ 16   return prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-09-04 21:30:48 [ERROR]: GET /user/me 
Invalid `prisma.users.findUnique()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\user\user.respository.ts:7:23

  4 import AppError from "../../errors/AppError";
  5 
  6 export const findUserById = async (userId: string) => {
→ 7   return prisma.users.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-09-04 21:30:55 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:16:28

  13 }) => {
  14   const { property_category, min_price, max_price } = filters;
  15 
→ 16   return prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-09-04 21:31:02 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:16:28

  13 }) => {
  14   const { property_category, min_price, max_price } = filters;
  15 
→ 16   return prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.13.0","name":"PrismaClientInitializationError"}
2025-09-04 21:32:54 [ERROR]: GET /user/me User not found {"statusCode":404,"success":false,"message":"User not found"}
2025-09-05 16:25:00 [ERROR]: PATCH /user/change-email-otp 
Invalid `prisma.users.update()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\auth\auth.repository.ts:49:23

  46 export const newOtpChangeEmailRepository = async (
  47   data: newOtpChangeEmailTypes
  48 ) => {
→ 49   return prisma.users.update({
         where: {
           id: "6074447b-cd22-41f5-abc0-00be30880bfc"
         },
         data: {
           id: "6074447b-cd22-41f5-abc0-00be30880bfc",
           verify_otp: "545032",
           verify_otp_expires_at: new Date("2025-09-05T09:40:00.899Z")
         },
         select: {
       ?   id?: true,
       ?   role?: true,
       ?   full_name?: true,
       ?   email?: true,
       ?   password_hash?: true,
       ?   profile_picture?: true,
       ?   is_verified?: true,
       ?   created_at?: true,
       ?   updated_at?: true,
       ?   reset_password_otp?: true,
       ?   verify_otp?: true,
       ?   verify_otp_expires_at?: true,
       ?   bookings?: true,
       ?   reviews?: true,
       ?   tenants?: true,
       ?   _count?: true
         }
       })

The `select` statement for type users needs at least one truthy value. {"name":"PrismaClientValidationError","clientVersion":"6.13.0"}
2025-09-05 16:29:43 [ERROR]: PATCH /user/change-email-otp 
Invalid `prisma.users.update()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\auth\auth.repository.ts:49:23

  46 export const newOtpChangeEmailRepository = async (
  47   data: newOtpChangeEmailTypes
  48 ) => {
→ 49   return prisma.users.update({
         where: {
           id: "6074447b-cd22-41f5-abc0-00be30880bfc"
         },
         data: {
           id: "6074447b-cd22-41f5-abc0-00be30880bfc",
           email: "yefay63064@cavoyar.com",
           verify_otp: "617073",
           verify_otp_expires_at: new Date("2025-09-05T09:44:43.328Z")
         },
         select: {
       ?   id?: true,
       ?   role?: true,
       ?   full_name?: true,
       ?   email?: true,
       ?   password_hash?: true,
       ?   profile_picture?: true,
       ?   is_verified?: true,
       ?   created_at?: true,
       ?   updated_at?: true,
       ?   reset_password_otp?: true,
       ?   verify_otp?: true,
       ?   verify_otp_expires_at?: true,
       ?   bookings?: true,
       ?   reviews?: true,
       ?   tenants?: true,
       ?   _count?: true
         }
       })

The `select` statement for type users needs at least one truthy value. {"name":"PrismaClientValidationError","clientVersion":"6.13.0"}
2025-09-05 16:50:29 [ERROR]: PATCH /auth/verify-email Verification code has expired {"statusCode":400,"success":false,"message":"Verification code has expired"}
2025-09-05 20:49:25 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-05 21:06:57 [ERROR]: PATCH /user/reset-password Invalid password {"statusCode":401,"success":false,"message":"Invalid password"}
2025-09-05 21:09:04 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-05 21:21:32 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-05 21:22:50 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-06 17:18:56 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-06 17:32:31 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-06 17:50:39 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:56:28

  53   };
  54 }
  55 
→ 56 return prisma.properties.findMany({
       where: {
         property_category: "apartment",
         rooms: {
           some: {
             base_price: {
               gte: undefined,
               lte: undefined
             }
           }
         },
         deleted_at: null
       },
       orderBy: {
         rooms: {
           _min: {
           ~~~~
             base_price: "asc"
           },
     ?     _count?: SortOrder
         }
       },
       include: {
         rooms: {
           orderBy: {
             base_price: "asc"
           }
         }
       }
     })

Unknown argument `_min`. Available options are marked with ?. {"name":"PrismaClientValidationError","clientVersion":"6.13.0"}
2025-09-06 17:50:40 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:56:28

  53   };
  54 }
  55 
→ 56 return prisma.properties.findMany({
       where: {
         property_category: "apartment",
         rooms: {
           some: {
             base_price: {
               gte: undefined,
               lte: undefined
             }
           }
         },
         deleted_at: null
       },
       orderBy: {
         rooms: {
           _min: {
           ~~~~
             base_price: "asc"
           },
     ?     _count?: SortOrder
         }
       },
       include: {
         rooms: {
           orderBy: {
             base_price: "asc"
           }
         }
       }
     })

Unknown argument `_min`. Available options are marked with ?. {"name":"PrismaClientValidationError","clientVersion":"6.13.0"}
2025-09-06 17:50:42 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:56:28

  53   };
  54 }
  55 
→ 56 return prisma.properties.findMany({
       where: {
         property_category: "apartment",
         rooms: {
           some: {
             base_price: {
               gte: undefined,
               lte: undefined
             }
           }
         },
         deleted_at: null
       },
       orderBy: {
         rooms: {
           _min: {
           ~~~~
             base_price: "asc"
           },
     ?     _count?: SortOrder
         }
       },
       include: {
         rooms: {
           orderBy: {
             base_price: "asc"
           }
         }
       }
     })

Unknown argument `_min`. Available options are marked with ?. {"name":"PrismaClientValidationError","clientVersion":"6.13.0"}
2025-09-06 17:50:46 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:56:28

  53   };
  54 }
  55 
→ 56 return prisma.properties.findMany({
       where: {
         property_category: "apartment",
         rooms: {
           some: {
             base_price: {
               gte: undefined,
               lte: undefined
             }
           }
         },
         deleted_at: null
       },
       orderBy: {
         rooms: {
           _min: {
           ~~~~
             base_price: "asc"
           },
     ?     _count?: SortOrder
         }
       },
       include: {
         rooms: {
           orderBy: {
             base_price: "asc"
           }
         }
       }
     })

Unknown argument `_min`. Available options are marked with ?. {"name":"PrismaClientValidationError","clientVersion":"6.13.0"}
2025-09-06 17:51:03 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:56:28

  53   };
  54 }
  55 
→ 56 return prisma.properties.findMany({
       where: {
         property_category: undefined,
         rooms: {
           some: {
             base_price: {
               gte: undefined,
               lte: undefined
             }
           }
         },
         deleted_at: null
       },
       orderBy: {
         rooms: {
           _min: {
           ~~~~
             base_price: "asc"
           },
     ?     _count?: SortOrder
         }
       },
       include: {
         rooms: {
           orderBy: {
             base_price: "asc"
           }
         }
       }
     })

Unknown argument `_min`. Available options are marked with ?. {"name":"PrismaClientValidationError","clientVersion":"6.13.0"}
2025-09-06 17:51:04 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:56:28

  53   };
  54 }
  55 
→ 56 return prisma.properties.findMany({
       where: {
         property_category: undefined,
         rooms: {
           some: {
             base_price: {
               gte: undefined,
               lte: undefined
             }
           }
         },
         deleted_at: null
       },
       orderBy: {
         rooms: {
           _min: {
           ~~~~
             base_price: "asc"
           },
     ?     _count?: SortOrder
         }
       },
       include: {
         rooms: {
           orderBy: {
             base_price: "asc"
           }
         }
       }
     })

Unknown argument `_min`. Available options are marked with ?. {"name":"PrismaClientValidationError","clientVersion":"6.13.0"}
2025-09-06 17:51:06 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:56:28

  53   };
  54 }
  55 
→ 56 return prisma.properties.findMany({
       where: {
         property_category: undefined,
         rooms: {
           some: {
             base_price: {
               gte: undefined,
               lte: undefined
             }
           }
         },
         deleted_at: null
       },
       orderBy: {
         rooms: {
           _min: {
           ~~~~
             base_price: "asc"
           },
     ?     _count?: SortOrder
         }
       },
       include: {
         rooms: {
           orderBy: {
             base_price: "asc"
           }
         }
       }
     })

Unknown argument `_min`. Available options are marked with ?. {"name":"PrismaClientValidationError","clientVersion":"6.13.0"}
2025-09-06 17:51:10 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:56:28

  53   };
  54 }
  55 
→ 56 return prisma.properties.findMany({
       where: {
         property_category: undefined,
         rooms: {
           some: {
             base_price: {
               gte: undefined,
               lte: undefined
             }
           }
         },
         deleted_at: null
       },
       orderBy: {
         rooms: {
           _min: {
           ~~~~
             base_price: "asc"
           },
     ?     _count?: SortOrder
         }
       },
       include: {
         rooms: {
           orderBy: {
             base_price: "asc"
           }
         }
       }
     })

Unknown argument `_min`. Available options are marked with ?. {"name":"PrismaClientValidationError","clientVersion":"6.13.0"}
2025-09-06 17:51:27 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:56:28

  53   };
  54 }
  55 
→ 56 return prisma.properties.findMany({
       where: {
         property_category: undefined,
         rooms: {
           some: {
             base_price: {
               gte: undefined,
               lte: undefined
             }
           }
         },
         deleted_at: null,
         name: {
           contains: "deluxe",
           mode: "insensitive"
         }
       },
       orderBy: {
         rooms: {
           _min: {
           ~~~~
             base_price: "asc"
           },
     ?     _count?: SortOrder
         }
       },
       include: {
         rooms: {
           orderBy: {
             base_price: "asc"
           }
         }
       }
     })

Unknown argument `_min`. Available options are marked with ?. {"name":"PrismaClientValidationError","clientVersion":"6.13.0"}
2025-09-06 17:51:28 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:56:28

  53   };
  54 }
  55 
→ 56 return prisma.properties.findMany({
       where: {
         property_category: undefined,
         rooms: {
           some: {
             base_price: {
               gte: undefined,
               lte: undefined
             }
           }
         },
         deleted_at: null,
         name: {
           contains: "deluxe",
           mode: "insensitive"
         }
       },
       orderBy: {
         rooms: {
           _min: {
           ~~~~
             base_price: "asc"
           },
     ?     _count?: SortOrder
         }
       },
       include: {
         rooms: {
           orderBy: {
             base_price: "asc"
           }
         }
       }
     })

Unknown argument `_min`. Available options are marked with ?. {"name":"PrismaClientValidationError","clientVersion":"6.13.0"}
2025-09-06 17:51:30 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:56:28

  53   };
  54 }
  55 
→ 56 return prisma.properties.findMany({
       where: {
         property_category: undefined,
         rooms: {
           some: {
             base_price: {
               gte: undefined,
               lte: undefined
             }
           }
         },
         deleted_at: null,
         name: {
           contains: "deluxe",
           mode: "insensitive"
         }
       },
       orderBy: {
         rooms: {
           _min: {
           ~~~~
             base_price: "asc"
           },
     ?     _count?: SortOrder
         }
       },
       include: {
         rooms: {
           orderBy: {
             base_price: "asc"
           }
         }
       }
     })

Unknown argument `_min`. Available options are marked with ?. {"name":"PrismaClientValidationError","clientVersion":"6.13.0"}
2025-09-06 17:51:31 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:56:28

  53   };
  54 }
  55 
→ 56 return prisma.properties.findMany({
       where: {
         property_category: undefined,
         rooms: {
           some: {
             base_price: {
               gte: undefined,
               lte: undefined
             }
           }
         },
         deleted_at: null
       },
       orderBy: {
         rooms: {
           _min: {
           ~~~~
             base_price: "asc"
           },
     ?     _count?: SortOrder
         }
       },
       include: {
         rooms: {
           orderBy: {
             base_price: "asc"
           }
         }
       }
     })

Unknown argument `_min`. Available options are marked with ?. {"name":"PrismaClientValidationError","clientVersion":"6.13.0"}
2025-09-06 17:51:32 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:56:28

  53   };
  54 }
  55 
→ 56 return prisma.properties.findMany({
       where: {
         property_category: undefined,
         rooms: {
           some: {
             base_price: {
               gte: undefined,
               lte: undefined
             }
           }
         },
         deleted_at: null
       },
       orderBy: {
         rooms: {
           _min: {
           ~~~~
             base_price: "asc"
           },
     ?     _count?: SortOrder
         }
       },
       include: {
         rooms: {
           orderBy: {
             base_price: "asc"
           }
         }
       }
     })

Unknown argument `_min`. Available options are marked with ?. {"name":"PrismaClientValidationError","clientVersion":"6.13.0"}
2025-09-06 17:51:34 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:56:28

  53   };
  54 }
  55 
→ 56 return prisma.properties.findMany({
       where: {
         property_category: undefined,
         rooms: {
           some: {
             base_price: {
               gte: undefined,
               lte: undefined
             }
           }
         },
         deleted_at: null
       },
       orderBy: {
         rooms: {
           _min: {
           ~~~~
             base_price: "asc"
           },
     ?     _count?: SortOrder
         }
       },
       include: {
         rooms: {
           orderBy: {
             base_price: "asc"
           }
         }
       }
     })

Unknown argument `_min`. Available options are marked with ?. {"name":"PrismaClientValidationError","clientVersion":"6.13.0"}
2025-09-06 17:51:39 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:56:28

  53   };
  54 }
  55 
→ 56 return prisma.properties.findMany({
       where: {
         property_category: undefined,
         rooms: {
           some: {
             base_price: {
               gte: undefined,
               lte: undefined
             }
           }
         },
         deleted_at: null
       },
       orderBy: {
         rooms: {
           _min: {
           ~~~~
             base_price: "asc"
           },
     ?     _count?: SortOrder
         }
       },
       include: {
         rooms: {
           orderBy: {
             base_price: "asc"
           }
         }
       }
     })

Unknown argument `_min`. Available options are marked with ?. {"name":"PrismaClientValidationError","clientVersion":"6.13.0"}
2025-09-06 17:59:39 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:23:44

  20 
  21 const categoryFilter = parsePropertyCategory(property_category);
  22 
→ 23 let properties = await prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"properties","database_location":"aws-0-us-west-1.pooler.supabase.com:6543"},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-09-06 18:02:17 [ERROR]: GET /property/all Invalid property category {"statusCode":400,"success":false,"message":"Invalid property category"}
2025-09-06 18:13:38 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-06 19:32:14 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-06 19:38:14 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-06 19:38:21 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-06 19:48:28 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-06 19:48:34 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-06 19:49:41 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-06 19:50:59 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-06 20:00:18 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-06 20:02:20 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-06 20:04:52 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-06 20:10:54 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:16:28

  13 }) => {
  14   const { property_category, name } = filters;
  15 
→ 16   return prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"properties","database_location":"aws-0-us-west-1.pooler.supabase.com:6543"},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-09-06 20:11:00 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:16:28

  13 }) => {
  14   const { property_category, name } = filters;
  15 
→ 16   return prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"properties","database_location":"aws-0-us-west-1.pooler.supabase.com:6543"},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-09-06 20:11:20 [ERROR]: GET /user/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-09-06 20:11:25 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:16:28

  13 }) => {
  14   const { property_category, name } = filters;
  15 
→ 16   return prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"properties","database_location":"aws-0-us-west-1.pooler.supabase.com:6543"},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-09-06 20:11:31 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:16:28

  13 }) => {
  14   const { property_category, name } = filters;
  15 
→ 16   return prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"properties","database_location":"aws-0-us-west-1.pooler.supabase.com:6543"},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-09-06 20:11:38 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:16:28

  13 }) => {
  14   const { property_category, name } = filters;
  15 
→ 16   return prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"properties","database_location":"aws-0-us-west-1.pooler.supabase.com:6543"},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-09-06 20:17:47 [ERROR]: POST /auth/login Invalid password {"statusCode":401,"success":false,"message":"Invalid password"}
2025-09-06 21:36:16 [ERROR]: PATCH /user/change-email-otp Cannot destructure property 'email' of 'data' as it is undefined. {}
2025-09-06 21:41:19 [ERROR]: PATCH /user/change-email-otp 
Invalid `prisma.users.findUnique()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\user\user.respository.ts:7:23

  4 import AppError from "../../errors/AppError";
  5 
  6 export const findUserById = async (userId: string) => {
→ 7   return prisma.users.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"users","database_location":"aws-0-us-west-1.pooler.supabase.com:6543"},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
2025-09-06 21:47:33 [ERROR]: GET /property/all 
Invalid `prisma.properties.findMany()` invocation in
D:\adi\purwhadika\FINPRO\Property Renting Web App\backend\src\repositories\property\property.repository.ts:16:28

  13 }) => {
  14   const { property_category, name } = filters;
  15 
→ 16   return prisma.properties.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"properties","database_location":"aws-0-us-west-1.pooler.supabase.com:6543"},"clientVersion":"6.13.0","name":"PrismaClientKnownRequestError"}
